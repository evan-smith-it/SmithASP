// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmithASP.Models;

namespace SmithASP.Migrations
{
    [DbContext(typeof(CryptogramDbContext))]
    partial class CryptogramDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmithASP.Models.Cryptogram", b =>
                {
                    b.Property<int>("CryptogramId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("key")
                        .IsRequired();

                    b.Property<string>("message")
                        .IsRequired();

                    b.Property<string>("result")
                        .IsRequired();

                    b.HasKey("CryptogramId");

                    b.ToTable("Cryptograms","Cryptography");
                });

            modelBuilder.Entity("SmithASP.Models.CryptogramEncryptionMethod", b =>
                {
                    b.Property<int>("CryptogramId");

                    b.Property<int>("EncryptionMethodId");

                    b.HasKey("CryptogramId", "EncryptionMethodId");

                    b.ToTable("CryptogramEncryptionMethod","Cryptography");
                });

            modelBuilder.Entity("SmithASP.Models.EncryptionMethod", b =>
                {
                    b.Property<int>("EncryptionMethodId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("varchar(550)");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("EncryptionMethodId");

                    b.ToTable("EncryptionMethods","Cryptography");

                    b.HasData(
                        new
                        {
                            EncryptionMethodId = 1,
                            Description = "Caesar ciphers use a list of symbols, such as the alphabet, and an encryption key. Each letter in the message is identified on the list of symbols and shifted a number times down the list based on the key.",
                            Name = "Caesar"
                        },
                        new
                        {
                            EncryptionMethodId = 2,
                            Description = "This type of cipher involves changing the positions of the letters in the message. A scrambled alphabet is created by making a cipher square with a keyword. All repeat letters are removed from the keyword and unused letters are placed in subsequent rows until the whole alphabet is present. Next the columns are numbered off in the alphabetical order of the first row, for example man would be numbered 213. Finally, the columns are then used to determine the order of the new alphabet.",
                            Name = "Transposition"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
