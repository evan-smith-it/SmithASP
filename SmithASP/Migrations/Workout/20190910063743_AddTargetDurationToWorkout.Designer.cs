// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmithASP.Models.DbContexts;

namespace SmithASP.Migrations.Workout
{
    [DbContext(typeof(WorkoutContext))]
    [Migration("20190910063743_AddTargetDurationToWorkout")]
    partial class AddTargetDurationToWorkout
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmithASP.Models.Workout.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("SmithASP.Models.Workout.ExerciseMuscleGroup", b =>
                {
                    b.Property<int>("ExerciseId");

                    b.Property<int>("MuscleGroupId");

                    b.HasKey("ExerciseId", "MuscleGroupId");

                    b.HasIndex("MuscleGroupId");

                    b.ToTable("ExerciseMuscleGroups");
                });

            modelBuilder.Entity("SmithASP.Models.Workout.MuscleGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ExerciseId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("MuscleGroups");
                });

            modelBuilder.Entity("SmithASP.Models.Workout.Vitals", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspNetUserId");

                    b.Property<int>("BP");

                    b.Property<int>("HR");

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.ToTable("Vitals");
                });

            modelBuilder.Entity("SmithASP.Models.Workout.Workout", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AspNetUserId");

                    b.Property<string>("Description");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("Name");

                    b.Property<DateTime>("StartTime");

                    b.Property<DateTime>("TargetDuration");

                    b.HasKey("Id");

                    b.ToTable("Workouts");
                });

            modelBuilder.Entity("SmithASP.Models.Workout.WorkoutExercise", b =>
                {
                    b.Property<int>("WorkoutId");

                    b.Property<int>("ExerciseId");

                    b.Property<DateTime>("EndTime");

                    b.Property<int>("FormScore");

                    b.Property<int>("Reps");

                    b.Property<DateTime>("RestTime");

                    b.Property<int>("Sets");

                    b.Property<DateTime>("StartTime");

                    b.HasKey("WorkoutId", "ExerciseId");

                    b.HasIndex("ExerciseId");

                    b.ToTable("WorkoutExercises");
                });

            modelBuilder.Entity("SmithASP.Models.Workout.ExerciseMuscleGroup", b =>
                {
                    b.HasOne("SmithASP.Models.Workout.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmithASP.Models.Workout.MuscleGroup", "MuscleGroup")
                        .WithMany()
                        .HasForeignKey("MuscleGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmithASP.Models.Workout.MuscleGroup", b =>
                {
                    b.HasOne("SmithASP.Models.Workout.Exercise")
                        .WithMany("MuscleGroups")
                        .HasForeignKey("ExerciseId");
                });

            modelBuilder.Entity("SmithASP.Models.Workout.WorkoutExercise", b =>
                {
                    b.HasOne("SmithASP.Models.Workout.Exercise", "Exercise")
                        .WithMany()
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmithASP.Models.Workout.Workout", "Workout")
                        .WithMany()
                        .HasForeignKey("WorkoutId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
